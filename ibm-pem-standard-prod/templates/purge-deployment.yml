{{ if .Values.license }}
{{ if .Values.purge.enable }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-purge-deployment
  labels: {{- include "purge-pod.labels" . | nindent 5 }}
spec:
  schedule: '{{ .Values.purge.schedule}}'
  jobTemplate:
    spec:
      template:
        metadata:
          labels: {{- include "purge-pod.labels" . | nindent 13 }}
          annotations:
            productID: {{- include "ibmpem.metering.productId" . | indent 1 }}
            productMetric: {{- include "ibmpem.metering.productMetric" . | indent 1 }}
            productName: {{- include "ibmpem.metering.productName" . | indent 1 }}
            productVersion: {{- include "ibmpem.metering.productVersion" . | indent 1 }}
            productChargedContainers: {{- include "ibmpem.metering.productChargedContainers" . | indent 1 }}
        spec:
          restartPolicy: OnFailure
          serviceAccountName: {{ .Values.serviceAccountName }}
          affinity: {{- include "ibmpem.affinity" . | nindent 13 }}
          volumes:
            #Setup.cfg file for APPLICATION
          - name: {{ .Release.Name }}-purge-setupfile
            configMap:
                name: {{ .Release.Name }}-purge-setupfile
            #volumes for Resources
          {{ if .Values.volumeClaims.resources.enabled }}
          - name: {{ .Release.Name }}-resources
            persistentVolumeClaim:
                claimName: {{ .Release.Name }}-resources-pvc
          {{ end }}
          #logs
          {{ if .Values.volumeClaims.logs.enabled }}
          - name: {{ .Release.Name }}-logs
            persistentVolumeClaim:
                claimName: {{ .Release.Name }}-logs-pvc
          {{ end }}
            #localtime (timezone for pods)
          - name: {{ .Release.Name }}-timezone
            configMap:
                name: {{ .Values.timezone.configmapname}}
            #keystore file for APPLICATION
          - name: {{ .Release.Name }}-app-keystore
            secret:
               secretName: {{ .Values.pem.setupfile.servers.keystore_filename }}
            #keystore file for DB
          {{ if .Values.dbsetup.setupfile.ssl_connection }}
          - name: {{ .Release.Name }}-db-keystore
            secret:
               secretName: {{ .Values.dbsetup.setupfile.db_sslTrustStoresecret }}
            #keystore file for Test DB
          - name: {{ .Release.Name }}-testdb-keystore
            secret:
               secretName: {{ .Values.dbsetup.setupfile.testmode_db_sslTrustStoresecret }}
          {{ end }}
          #keystorefile for target db
          {{ if not .Values.purge.setupfile.purge.target_db_is_same_as_source_db }}
          {{ if .Values.purge.setupfile.purge.target_ssl_connection }}
          {{ if .Values.purge.setupfile.purge.target_db_sslTrustStoreSecret }}
          - name: {{ .Release.Name }}-targetdb-truststore
            secret:
               secretName: {{ .Values.purge.setupfile.purge.target_db_sslTrustStoreSecret }}
          {{ end }}
          {{ end }}
          {{ end }}
            #PassPhrase
          - name: {{ .Release.Name }}-passphrase
            secret:
               secretName: {{ .Values.dbsetup.setupfile.passphrasesecret }}
          imagePullSecrets:
            - name: {{ .Values.image.pullSecret }}
          hostNetwork: false
          hostPID: false
          hostIPC: false
          securityContext:
            runAsUser: {{ .Values.security.runAsUser | default "1011" }}
            runAsNonRoot: true
            supplementalGroups:
              {{- range $.Values.security.supplementalGroups }}
              - {{ . }}
              {{- end }}
            fsGroup: {{ .Values.security.fsGroup | default "1011" }}
          containers:
            - name: {{ .Release.Name }}-purge
              image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              securityContext:
                capabilities:
                  drop:
                    - ALL
                privileged: false
                runAsUser: {{ .Values.security.runAsUser | default "1011" }}
                readOnlyRootFilesystem: false
                allowPrivilegeEscalation: false
              resources: {{- toYaml .Values.purge.resources | nindent 18 }}
              volumeMounts:
                #volumes for logs
              {{ if .Values.volumeClaims.logs.enabled }}
              - name: {{ .Release.Name }}-logs
                mountPath: /opt/IBM/Purge/log
                subPath: {{ .Values.volumeClaims.logs.subpath.purge }}
              {{ end }}
                #volumes for db driver jar
              {{ if .Values.volumeClaims.resources.enabled }}
              - name: {{ .Release.Name }}-resources
                mountPath: /opt/IBM/Resources/dbdrivers/
                subPath: {{ .Values.volumeClaims.resources.subpath.dbdrivers }}
                readOnly: true
              {{ end }}
                #Setup.cfg file
              - name: {{ .Release.Name }}-purge-setupfile
                mountPath: /opt/IBM/Resources/Setup.cfg
                subPath: Setup.cfg
                #localtime (timezone for pod)
              - name: {{ .Release.Name }}-timezone
                mountPath: /opt/IBM/localtime
                subPath: localtime
                readOnly: true
                #keystore file for APPLICATION
              - name: {{ .Release.Name }}-app-keystore
                mountPath: /opt/IBM/Resources/resources/security/{{ .Values.pp.setupfile.servers.keystore_filename }}
                subPath: {{ .Values.pem.setupfile.servers.keystore_filename }}
                #keystore files for db
              {{ if .Values.dbsetup.setupfile.ssl_connection }}
                #master DB keystore
              - name: {{ .Release.Name }}-db-keystore
                mountPath: /opt/IBM/Resources/resources/security/{{ .Values.dbsetup.setupfile.db_sslTrustStoreName }}
                subPath: {{ .Values.dbsetup.setupfile.db_sslTrustStoreName }}
                #Test DB keystore
              - name: {{ .Release.Name }}-testdb-keystore
                mountPath: /opt/IBM/Resources/resources/security/{{ .Values.dbsetup.setupfile.testmode_db_sslTrustStoreName }}
                subPath: {{ .Values.dbsetup.setupfile.testmode_db_sslTrustStoreName }}
              {{ end }}
              #keystorefile for target db
              {{ if not .Values.purge.setupfile.purge.target_db_is_same_as_source_db }}
              {{ if .Values.purge.setupfile.purge.target_ssl_connection }}
              {{ if .Values.purge.setupfile.purge.target_db_sslTrustStoreSecret }}
              - name: {{ .Release.Name }}-targetdb-truststore
                mountPath: /opt/IBM/Resources/resources/security/{{ .Values.purge.setupfile.purge.target_db_sslTrustStoreName }}
                subPath: {{ .Values.purge.setupfile.purge.target_db_sslTrustStoreName }}
              {{ end }}
              {{ end }}
              {{ end }}
                #passphrase file
              - name: {{ .Release.Name }}-passphrase
                mountPath: /opt/IBM/Resources/passphrase.txt
                subPath: passphrase.txt
              env:
              - name: application
                value: purge
              envFrom:
              #Optional
              {{ if .Values.dbsetup.setupfile.proxy_password }}
              - secretRef:
                  name: {{ .Values.dbsetup.setupfile.proxy_password }}
              {{ end }}
              #keystore password for target db
              {{ if not .Values.purge.setupfile.purge.target_db_is_same_as_source_db }}
              {{ if .Values.purge.setupfile.purge.target_ssl_connection }}
              {{ if .Values.purge.setupfile.purge.target_db_sslTrustStorePassword }}
              - secretRef:
                  name: {{ .Values.purge.setupfile.purge.target_db_sslTrustStorePassword }}
              {{ end }}
              {{ end }}
              {{ end }}
              {{ if .Values.purge.setupfile.purge.target_db_password }}
              - secretRef:
                  name: {{ .Values.purge.setupfile.purge.target_db_password }}
              {{ end }}
              #Required
              - secretRef:
                  name: {{ .Values.dbsetup.setupfile.db_password }}
              - secretRef:
                  name: {{ .Values.dbsetup.setupfile.testmode_db_password }}
              #optional
              {{ if .Values.dbsetup.setupfile.ssl_connection }}
              - secretRef:
                  name: {{ .Values.dbsetup.setupfile.db_sslTrustStorePassword }}
              - secretRef:
                  name: {{ .Values.dbsetup.setupfile.testmode_db_sslTrustStorePassword }}
              {{ end }}

{{ end }}
{{ end }}
