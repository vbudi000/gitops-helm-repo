{{ if .Values.license }}
{{ if .Values.communitymanager.install }}
{{ if .Values.communitymanager.nonprod.enable }}
{{ if .Values.communitymanager.nonprod.setupfile.ssomigration.enable }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}.nonprodpcm.sso.migrator"
  labels: {{- include "sso-migrator-pod.labels" . | nindent 5 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels: {{- include "sso-migrator-pod.labels" . | nindent 9 }}
      annotations:
        productID: {{- include "ibmpem.metering.productId" . | indent 1 }}
        productMetric: {{- include "ibmpem.metering.productMetric" . | indent 1 }}
        productName: {{- include "ibmpem.metering.productName" . | indent 1 }}
        productVersion: {{- include "ibmpem.metering.productVersion" . | indent 1 }}
        productChargedContainers: {{- include "ibmpem.metering.productChargedContainers" . | indent 1 }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Values.serviceAccountName }}
      affinity: {{- include "ibmpem.affinity" . | nindent 9 }}
      volumes:
      #jars Resources
      {{ if .Values.volumeClaims.resources.enabled }}
      - name: {{ .Release.Name }}-resources
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-resources-pvc
      {{ end }}
      #setupfile
      - name: {{ .Release.Name }}-setupfile
        configMap:
            name: {{ .Release.Name }}-nonprodpcm-migrate-setupfile
      #logs
      {{ if .Values.volumeClaims.logs.enabled }}
      {{ if not .Values.setupfile.servers.enableConsoleLogs }}
      - name: {{ .Release.Name }}-logs
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-logs-pvc
      {{ end }}
      {{ end }}
      #DB keystore
      {{ if .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.enabled }}
      {{ if .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trustStoreSecret }}
      - name: {{ .Release.Name }}-pcmdb-keystore
        secret:
           secretName: {{ .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trustStoreSecret }}
      {{ end }}
      {{ end }}
      imagePullSecrets:
        - name: {{ .Values.communitymanager.image.pullSecret }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsUser: {{ .Values.security.runAsUser | default "1011" }}
        runAsNonRoot: true
        supplementalGroups:
          {{- range $.Values.security.supplementalGroups }}
          - {{ . }}
          {{- end }}
        fsGroup: {{ .Values.security.fsGroup | default "1011" }}
      containers:
      - name: {{ .Release.Name }}-nonprodpcm-sso-migrator
        image: "{{ .Values.communitymanager.image.repository }}:{{ .Values.communitymanager.image.tag }}"
        imagePullPolicy: {{ .Values.communitymanager.image.pullPolicy }}
        securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsUser: {{ .Values.security.runAsUser | default "1011" }}
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
        resources: {{- toYaml .Values.dbsetup.resources | nindent 11 }}
        volumeMounts:
        #jars
        {{ if .Values.volumeClaims.resources.enabled }}
        - name: {{ .Release.Name }}-resources
          mountPath: /opt/IBM/PCM/jars
          subPath: {{ .Values.volumeClaims.resources.subpath.pcm }}
        {{ end }}
        #jars
        {{ if .Values.volumeClaims.resources.enabled }}
        - name: {{ .Release.Name }}-resources
          mountPath: /opt/IBM/PCM/sso/data/
          subPath: {{ .Values.volumeClaims.resources.subpath.ssomigrator }}
        {{ end }}
        #setup[file
        - name: {{ .Release.Name }}-setupfile
          mountPath: /opt/IBM/config/application.yml
          subPath: application.yml
        #logs
        {{ if .Values.volumeClaims.logs.enabled }}
        {{ if not .Values.setupfile.servers.enableConsoleLogs }}
        - name: {{ .Release.Name }}-logs
          mountPath: /opt/IBM/PCM/logs
          subPath: {{ .Values.volumeClaims.logs.subpath.pcmNonProd }}
        {{ end }}
        {{ end }}
        #db keystore
        {{ if .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.enabled }}
        {{ if .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trustStoreSecret }}
        - name: {{ .Release.Name }}-pcmdb-keystore
          mountPath: /opt/IBM/config/{{ .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trust_store }}
          subPath: {{ .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trust_store }}
        {{ end }}
        {{ end }}
        env:
        - name: APP
          value: ocp-ssomigration
        {{ if .Values.setupfile.servers.enableConsoleLogs }}
        - name: CONSOLE_LOGGING
          value: true
        {{ else }}
        - name: CONSOLE_LOGGING
          value: false
        {{ end }}
        envFrom:
        - secretRef:
            name: {{ .Values.communitymanager.nonprod.setupfile.spring.datasource.dbpassword }}
        {{ if .Values.communitymanager.nonprod.setupfile.cm.cmks }}
        - secretRef:
            name: {{ .Values.communitymanager.nonprod.setupfile.cm.cmks }}
        {{ end }}
        {{ if .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trust_store_cmks }}
        - secretRef:
            name: {{ .Values.communitymanager.nonprod.setupfile.spring.datasource.ssl.trust_store_cmks }}
        {{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
